// Package Swagger provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9RY32/bNhD+VwhuQF+82u3aF785MTp4KJogdrGHYQ9n6SQzk0iVPGXzAv/vw5GWLeuH",
	"YzcOkObFEnkk7+67+z4qjzIyeWE0anJy/ChdtMIc/OPEkooyvMNvJTrikcKaAi0p9PNQ0srYWczPtC5Q",
	"jqUjq3QqNwO5NPG6cyJGF1lVkDK6cz6BB2MVYX3bpTEZgq5Pu2tTaqrZKE2YomWbTP2N8VeH1rupCHPX",
	"edR2AKyFNb+7yFhky8TYHEiOZZIZILmz1GW+DEe4rEy794T0swrZOv1gUpRhh+Xe1CzvMSK23aHiCqMd",
	"tmGZeFj46WeLiRzLn4Z7iIdbfIfBarcLbxzgnHZ6fNUH57VFIIwndJC3GAh/IZXjPnf7JdMnKuBTRwW0",
	"Z48VQE8Qn7+zLuan18W8ry4WHXVxDJ8FpHVwmi4teipmIL8W8XmAdBbZtjp6Ol/lkHafriHvnrCYKkdo",
	"b/Ql/Oqr/e+oxp5amfWG+KUvxLuzQ7wQWvVaecGU9AZ+gSB4CP8ltBqyqYm85wdKIT8pHQtTksiNRQFL",
	"fpz/Aym3/ECWNpNjuSIqxsOhC8NvlWHvlE6Mdzu0jLxDyNR/wNsKkwh+FX8Ym8VicjuTA/mA1oUj370d",
	"vR3xFqZADYWSY/mrHxrIAmjlnRxC4GP/kqJPAaff78/aKH9DmlQ23AcBKG//fjTin8howsBlUBSZivzi",
	"4b0LBBkooY1sDAQn80lDzFuU0g3JIQRVqMLWmOlDiOHQ8hq00IZEiiR2CfI7FiYQSsPeF6kAXVnLQSOL",
	"wWKym7UhkEqXTk7hOTlqZ+AWSZAREMf8QysUjlgbgj/KsmaRLXHzCoDuE49TkHZlFKFzSZmJHQxng70Z",
	"7Ltj+Mg3pk1YnCFhu0+mYZx7y0KO5GX6z+ZhLLAi8AhDEFeLFE9yV8pKhMIdrYnMoJblJiv91ULtfTva",
	"bWpCNj6052eJ4IMFfishc+KNipWhN2z+sSt5Du0DWoHWGuuxcWWeg13vEuLqXbEZVBzTQY5bI7Fci23o",
	"fUR0tZ4Hg6Op9mGYZLcvGWGRSqtfLN2jy7dy1QXPrPGZfoBMxWI2Fa5krzA+uwI8/ZUdChH0c89t56Gy",
	"AhIaMXYM0BJFGdT4kiD9WFT77nVU0fO5Yd7PDaFkDrnB862/IPtEVErbqaPhG/GFsD34ePhBVbT1eXw5",
	"Ef14TESj7U0oAHQIeu2WtJ+uIB8+cotvatfQwwPuPHU7AcIpnWbYe9NimfBbXq39jf8JPuJTPR/5NU+J",
	"hA47vhKRaID8TAiPSHmnPnv07stMQS9ov/OsQB0XRmnqgspbfLlZLG5un/t10Ux9KxsEaf3uH254PNjr",
	"/wLSo94vePHLdvkT/905pZEbcZ9wDfZJ2fi//wMAAP//xZYTT2EVAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
